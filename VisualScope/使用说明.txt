测试程序内容：测试海域，目标点，航行船舶，静态障碍物，动态障碍船

测试海域信息：
测试范围：	横坐标（x轴）0--2000单位，纵坐标（y轴）0--2000单位，航行船舶超过此范围即强制停止

目标点信息：
起点坐标：	（500，500）
落水人员1：	（1500，500），有效半径40单位，使用绿圈表示，落水人员坐标与船舶设定半径接触即认为发生碰撞
终点坐标：	（1500，1500），有效半径40单位，使用绿圈表示
注：正式比赛时目标点数目和坐标会发生变化，有效半径不变

航行船舶信息：
船舶航速：	固定为10单位/秒
船舶舵角：	舵角由算法控制
船舶航向：	使用nomoto模型解算舵角得到航向
船舶设定半径：	5单位，使用红圈表示
船舶轨迹：	使用绿线表示
注：正式比赛时航行船舶信息不会发生变化

静态障碍物信息：
障碍物设定半径：	20单位，使用红圈表示，障碍物设定半径与船舶设定半径接触即认为发生碰撞
障碍物危险半径：	80单位（60+20），使用黄圈表示，障碍物安全半径与船舶设定半径接触即认为开始出现风险
障碍物坐标：	（1000，500），（1500，1000），（1000，1500）
注：正式比赛时静态障碍物数目和坐标会发生变化，有效半径不变

动态障碍船信息：
障碍船航速：	固定为10单位/秒
障碍船航向：	变化
障碍船数量：	上限为三个，随船舶航行不断出现
障碍船轨迹：	使用绿线表示
障碍船设定半径：	10单位，使用红圈表示，障碍物设定半径与船舶设定半径接触即认为发生碰撞
障碍船危险半径：	70单位（60+10），使用黄圈表示，障碍物安全半径与船舶设定半径接触即认为开始出现风险
注：正式比赛时动态障碍船数目上限和出现规律会发生变化，有效半径和航速不变



测试程序通信：
通信方式：	测试程序使用基于socket的udp通信，格式为UTF8
发送地址：	127.0.0.1:6666，测试算法可使用该地址接受信息
接收端口：	5566，测试算法可向该地址发送指令
发送内容：	"$,起始地址x轴坐标,起始地址y轴坐标,下一目标x轴坐标,下一目标y轴坐标,
		航行船舶x轴坐标,航行船舶y轴坐标,航行船舶半径,航行船舶x轴速度,航行船舶y轴速度,
		静态障碍物数量,(静态障碍物x轴坐标,静态障碍物y轴坐标,静态障碍物半径,)*静态障碍物数量
		动态障碍船数量,(动态障碍船x轴坐标,动态障碍船y轴坐标,动态障碍船半径,动态障碍船x轴速度,动态障碍船y轴速度,)*动态障碍船数量@"
接收内容：	"$,舵令,@"



测试程序界面：
顶部中央：	测试场景名称
顶部右侧：	测试海域小地图，其中航行船舶使用大模型表示，实际位置为顶部红点处
中部右侧：	程序控制按钮，包括运行切换按钮，全屏切换按钮，退出按钮
运行切换按钮：	测试程序在运行、停止、准备三个状态切换，快捷键为空格
		其中进入运行状态后程序开始收发信息，航行船舶开始运动；
		进入停止状态后航行船舶停止运动，程序停止收发；
		进入准备状态后测试程序内容初始化
全屏切换按钮：	控制测试程序在全屏和非全屏间切换；进入全屏前建议先最大化窗口，快捷键为backspace
退出按钮：	按下后程序退出，快捷键为esc
底部右侧：	隐藏按钮，按下可隐藏测试场景名称和程序控制按钮
注：可使用鼠标滚轮控制视角远近，按下鼠标右键后拖动鼠标控制视角方向

